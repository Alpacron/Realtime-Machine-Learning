name: ‚òÅ Auth Service | Sonar

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  SONAR_TOKEN: ${{ secrets.SONAR_AUTH }}
  workdir: services/auth
  project: auth_antivalor

on:
  push:
    paths: [ "services/auth/**", ".github/workflows/auth-service-sonar.yml" ]
    branches: main
  pull_request:
    paths: [ "services/auth/**", ".github/workflows/auth-service-sonar.yml" ]
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Build and Analyse
    runs-on: self-hosted
    steps:
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Build and analyse
        run: |
          dotnet-sonarscanner begin /k:"auth" /o:"alpacron" /d:sonar.login="${{ env.SONAR_TOKEN }}" //d:sonar.host.url="${{ secrets.SONAR_HOST_URL }}" /d:sonar.cs.vscoveragexml.reportsPaths=coverage.xml
          dotnet build ${{ env.workdir }}
          dotnet tool run dotnet-sonarscanner end /d:sonar.login="${{ env.SONAR_TOKEN }}"
